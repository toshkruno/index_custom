<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2015 DevIntelle Consulting Service Pvt.Ltd (<http://www.devintellecs.com>).

For Module Support : devintelle@gmail.com  or Skype : devintelle 
 -->
<odoo>
    <record id="hr_loan_structure" model="hr.payroll.structure">
        <field name="code">BASE</field>
        <field name="name">Base for new structures</field>
        <field name="type_id" ref="hr_contract.structure_type_employee"/>
        <field name="unpaid_work_entry_type_ids" eval="[(4, ref('hr_work_entry_contract.work_entry_type_unpaid_leave'))]"/>
        <field name="country_id" eval="False"/>
    </record>

    <record id="dev_emp_loan_installment" model="hr.salary.rule">
        <field name="name">Loan Installment</field>
        <field name="sequence" eval="190"/>
        <field name="code">LOANINS</field>
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="condition_select">python</field>
        <field name="struct_id" ref="hr_loan_structure"/>
        <field name="condition_python"><![CDATA[
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# rule: object containing the current rule being computed
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs

# Note: returned value have to be set in the variable 'result'

result = payslip.installment_amount > 0
            ]]></field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = (payslip.installment_amount*-1 or 0)</field>
    </record>

    <record id="dev_emp_loan_interest_installment" model="hr.salary.rule">
        <field name="name">Loan Installment Interest</field>
        <field name="sequence" eval="191"/>
        <field name="code">LOANINT</field>
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="struct_id" ref="hr_loan_structure"/>
        <field name="condition_select">python</field>
        <field name="condition_python"><![CDATA[
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# rule: object containing the current rule being computed
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs

# Note: returned value have to be set in the variable 'result'

result = payslip.installment_int > 0
            ]]></field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = (payslip.installment_int*-1 or 0)</field>
    </record>


    <!--     <record id="hr_payroll.structure_002" model="hr.payroll.structure">-->
    <!--        <field name="code">BASE</field>-->
    <!--        <field name="name">Base for new structures</field>-->
    <!--        <field eval="[(6, 0, [ref('hr_payroll.hr_rule_basic'), ref('hr_payroll.hr_rule_taxable'),ref('dev_emp_loan_installment'),ref('dev_emp_loan_interest_installment'),ref('hr_payroll.hr_rule_net')])]" name="rule_ids"/>-->
    <!--        <field name="company_id" ref="base.main_company"/>-->
    <!--    </record>-->
</odoo>
